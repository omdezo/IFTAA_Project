# IFTAA_Project specific
[Oo]bj/
[Bb]in/

# Vector Database & Storage
volumes/
data/vectors/
data/backups/
*.db
*.sqlite
*.sqlite3

# Data files (keep samples only)
data/json/fatwas.json
data/json/fatwas_multilingual.json
data/json/fatwas_multilingual_seamless.json  
data/json/fatwas_enriched_v2.json

# Keep normalized categories (this is safe to share)
# data/json/categories_normalized.json

# Large datasets
fatwas.json
fatwas_*.json
*_fatwas.json

# Logs
logs/
*.log
app.log
seed_milvus.log

# Environment files (PRODUCTION SENSITIVE)
.env
.env.local
.env.production
*.env
config.env
appsettings.Production.json

# Database credentials and connections
*connectionstring*
*connection-string*
*dbpass*
*dbpassword*

# Authentication credentials
*secret*
*token*
*jwt*
*auth*
*password*
*credentials*

# Production deployment files
deployment/production/.env.prod
deployment/production/configs/ssl/
deployment/production/status_report_*.txt

# Configuration files with sensitive data
config/config.env
config/*.env
config/production.*
appsettings.Production.json
src/backend/appsettings.Production.json

# Python cache
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Project specific
volumes/
*.log
.DS_Store
.vscode/
.idea/

# Claude AI assistant files
.claude/

# Test results and temporary files
tests/test_results.json
tests/test_results.log
tests/*_results.json
tests/*_results.log
simple_test_results.*
test_results.*
*.tmp

# C# specific
bin/
obj/
*.user
*.suo
.vs/
packages/
*.nupkg

# Large data files (optional - uncomment if you want to ignore large datasets)
# data/*.json
# data/*.csv

# Temporary files
*.temp
/tmp/ 
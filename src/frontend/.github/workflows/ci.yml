name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: src/frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd src/frontend
        npm ci
        
    - name: Run linter
      run: |
        cd src/frontend
        npm run lint
        
    - name: Run type check
      run: |
        cd src/frontend
        npm run typecheck
        
    - name: Run tests
      run: |
        cd src/frontend
        npm run test
        
    - name: Build application
      run: |
        cd src/frontend
        npm run build
        
    - name: Check bundle size
      run: |
        cd src/frontend
        npm run build:analyze
        
    - name: Upload coverage reports
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: src/frontend/coverage/coverage-final.json
        flags: frontend
        name: frontend-coverage

  lighthouse:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: src/frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd src/frontend
        npm ci
        
    - name: Build application
      run: |
        cd src/frontend
        npm run build
        
    - name: Serve application
      run: |
        cd src/frontend
        npm install -g serve
        serve -s dist -l 3000 &
        sleep 5
        
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: src/frontend/lighthouserc.js
        uploadArtifacts: true
        temporaryPublicStorage: true

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: src/frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd src/frontend
        npm ci
        
    - name: Run security audit
      run: |
        cd src/frontend
        npm audit --audit-level=moderate
        
    - name: Check for known vulnerabilities
      run: |
        cd src/frontend
        npx better-npm-audit audit
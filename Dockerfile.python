# Use Python 3.11 slim image
FROM python:3.11

WORKDIR /app

# Install system dependencies & Rust
RUN apt-get update && apt-get install -y curl gcc g++ build-essential && rm -rf /var/lib/apt/lists/*
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Install Python dependencies using cache-friendly layers
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Pre-cache AI models
RUN python -c "from transformers import MarianMTModel, MarianTokenizer; MarianTokenizer.from_pretrained('Helsinki-NLP/opus-mt-ar-en'); MarianMTModel.from_pretrained('Helsinki-NLP/opus-mt-ar-en')"
RUN python -c "from sentence_transformers import SentenceTransformer; SentenceTransformer('sentence-transformers/paraphrase-multilingual-mpnet-base-v2')"

# Copy application code
COPY semantic_search_service.py .
COPY smart_data_loader.py .
COPY config.env .
COPY data/ ./data/

# Expose port
EXPOSE 5001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=120s --retries=3 \
    CMD curl -f http://localhost:5001/health || exit 1

# Create startup script
COPY <<EOF /app/start.sh
#!/bin/bash
set -e

echo "üöÄ Starting IFTAA Python Service..."

# Wait for dependencies
echo "‚è≥ Waiting for MongoDB..."
while ! curl -f http://mongodb:27017/ >/dev/null 2>&1; do
    echo "   MongoDB not ready, waiting..."
    sleep 5
done

echo "‚è≥ Waiting for Milvus..."
while ! curl -f http://milvus:9091/healthz >/dev/null 2>&1; do
    echo "   Milvus not ready, waiting..."
    sleep 5
done

echo "‚úÖ Dependencies ready!"

# Check if data loading is needed
echo "üîç Checking data status..."
python smart_data_loader.py --docker

# Start the main service
echo "üöÄ Starting semantic search service with improved translation..."
python semantic_search_service.py
EOF

RUN chmod +x /app/start.sh

# Start the application with the startup script
CMD ["/app/start.sh"] 